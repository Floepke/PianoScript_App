ACCIDENTAL_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAcElEQVRYhe2VwQrAMAhD3dj//7K7FkrWjjVaR96tHlRiSM2EEAXwwfsT58pmJRc4QP2NzKjHMv7tAZ2AdYLpJdM9wKKOAlogfYErYEZryC60mAp4MxymJVuBYUwzFZj6I6JMCIOJfYJHA8JixGCxDTeGFhAgizkxRgAAAABJRU5ErkJggg=="
BEAM_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAs0lEQVRYhe2W4QqAIAyEb73/O9ufHGFzztxMpIMoMr3Pc5IEICFWdN3T7Zl1BJtn46pI+OhB2WlAxjYA/gmUBs3JeALUzFSIGTWgKgNo62ZVrZ86nncCpVlzMl4AZYL5ktpDADSTrm0t0Vv6vP5umV2wDIDHdhwCmK4fQAKYWgdLJvADABPrQPtRRBqz71dLwJPrPQHXBpPGsSRIyxbhqMxnhG0TsNbWvjUAtFOgaAANgt+fMywcOfV9nGQAAAAASUVORK5CYII="
COUNTLINE_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAaklEQVRYhe2WSwrAIAwFn8X7X7ldFUJIbSsaEWZWfh44oIYUSac2oSXau6ejz2UcCCBQzdi+1hLMo0wqfEMEEJhCfY985v5uUc3wGZv7fcDIvfVXgAACywVa/YBfe8qkQR1AAIEp+P4/nQtlEhct/gii1AAAAABJRU5ErkJggg=="
GRIDEDITOR_B64 = "iVBORw0KGgoAAAANSUhEUgAAABgAAAAgCAIAAACHPC9vAAAACXBIWXMAAA7EAAAOxAGVKw4bAAACDUlEQVRIia1Wy66qMBRdVDwSX+DAxBkw4P//AH/COC1RiRhfRYGiYvcdNBpv7omQXPagabvb1cfae7XGYrFYr9dlWQKwLKsoCtM0pZQAbNvGh6Vpatt2mqbaVVUVgKqqLMsKggBSSiLinHPOiWi5XG632zAMwzAkIqXU4XDY7/dEFIahUmo+n2vX8XgUQuhZeZ6b+GrGy74PA1ADREQ/Pz9E9L9AAO73exMg9t1tGEYTlPodEVGv12vnaFVVNQISQpRluV6vdTuO4yzLkiQBEEUREaVpqsskSTjnu91OKRVFkRCCMXa5XAAMBgPTcRzLsjSK53lSyslkkmWZbhJRlmVENB6POee+769WKyLyPO90OnU6nfP57HleURT1R1NKtXNHj8ejdkwjoG632wSoJo4AMMZaSBEAt9utyY6a0q87OedJkhDR7/S/Y9d1XSml4ziaftd1AWj6R6MR59zzPE2/67rj8Zgxdj6f9SwTL63QlXeJV6LppP3Xhb9Fpv6O2tEjAG3qUe2YRkBE1M6OmuqREEJKudls9OJxHF+vVx1HnHMAQggAjuN8xhHnPE1TxpiOsuFwaDqOM5vNNKrv+2VZTiaTPM91Uz87RDSdTqMoesuI7/u/y8gXgluT2jb1qB2g1gKySX4AMJVSVVW9vxbP51OXeD1EmsF+v/92EZGe8lkx9LemyZpfLAiCP+zC5ZhYPoDaAAAAAElFTkSuQmCC"
LINEBREAK_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAd0lEQVRYhe2UwQ7AIAhDy/7/n+dhO5lFGKPsYHsTjH0qKRDTSegBAI4gAE0CEIAABGC40sru9ZxcNtW+7FvVHuXGaId+hZC5V2szbwPwTKgQ+5p70kBm+3uYl4Nkbl4GkX32EoCKP6fNRfRgCsCbQ9sHkgrRmv0DGd8y6H2ofYoAAAAASUVORK5CYII="
NOTE_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAcUlEQVRYhe2WQQ7AIAgEaf//Z3syadUWiCI9zByVZEcwRhF4pwTsdZye4ggQQACBdIFjsOZ6SGaz2w7sCn9aOMJrfZFx97S9jvQ7UAWsrV8+ot90wDoz82y9AmncBbTTLT99K/AVEhKuwZcMAQQQgC1cti4NMKdUwM4AAAAASUVORK5CYII="
NOTEINPUTLEFT_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAdklEQVRYhe2W4QqAMAiE76L3f+X6F1q4WihG3MFg4Ny+HToGSHPasmPLe5YcCUAAAmgHoJmPHpKqM1sccBdltGqQHOXY2BM3CXygBioAzrenGZd17Q6sBXsS3oWoHv5bA8B9dx3xSgciiNnWd9KXTAACEICUrh2J1A8zbHGvDgAAAABJRU5ErkJggg=="
GRACENOTE_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAdklEQVRYhe2W0QqAMAhFNfr/X16vUeolvMuXe2AQaHkmm2QmctaG2IvjS/IOJCABCYwLnMRvreDZ0UusDmTTD05FhgAqUsbHz0BX4Lk7v60qjybQpnsL3OLTH+WFjHeAIYDuehlndSArAgdRhX7JJCABCYhfuADLnBAzW15FsgAAAABJRU5ErkJggg=="
REPEATS_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAN0lEQVRYhe3UOQoAMAgEQJP//zlpQtocYCMzsI2V4GIEAEWMldv51lPW4UGLw42y6UAZ/gAA3yZoAgj/MVKxYwAAAABJRU5ErkJggg=="
SLUR_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAfklEQVRYhe2XQQ7AIAgESX/q03zp9m5DAxbY2DAn4wEmGzUoYgfKugQAArqEca+cTxJXlAWbNQVzKhkJYEy4JMIaK2uKAA23BP0WtEAGrnNAT6AFWoAuEE0/xecJRLI1D/wmge1pKGUoTaipFn5818bEuhfTfPkbvjUpTeB8bqmUKvw1JvzSAAAAAElFTkSuQmCC"
STAFFSIZER_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAnUlEQVRYhe2XzQ6AIAyD0fj+r4wXT2STtV0gJGviRUn9cD+y1jT176J1iS+XvVgAb9ewHwMw++SQJwoQjbcSWkhyEt5JIAVQAOcCPM79lDbL+li17dX6Xx9AfPBFQQBKcndDfLyYbM0By4TJgdDaSBlm/dlMHwuAylzWR82BHnw+86FV54ECOB9g+7H8uMFkBrFkNPMglk1DI4TUCV+gsTEJ9Hdq3QAAAABJRU5ErkJggg=="
TEXT_B64 = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAbUlEQVRYhe2UwQ6AMAxCp/H/f3neTastbHLhHU1WKMyNYYwxYg7y/GRnMQZm8K097yQMLAE1kEUfpbLFwFMcrhIx8LVlK4ULMACLRcgvYbe7zsal2UwFkcDvfwFNtYJss8ob8KohT0BuwBhj5Nxm3wsbOXBXQAAAAABJRU5ErkJggg=="
POPUP_B64 = "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAPElEQVQokWNkYPjPQApgIkk1AwMDC4Q6cOAgQaUODvY4bXBwsIdIU8FJI1IDC1ZRPNFC+3gg2UmMNE+tANKcDKEB1PSXAAAAAElFTkSuQmCC"

# This file contains base64 encoded png images.
# It is meant to be imported in another python file and the
# base64 strings can be converted into QIcons with the
# 'base64_to_qicon' function defined below.

from PySide6.QtGui import QIcon, QPixmap
from PySide6.QtCore import QByteArray, QBuffer, QIODevice
import base64

def base64_to_qicon(base64_str):
    data = base64.b64decode(base64_str)
    pixmap = QPixmap()
    buf = QByteArray(data)
    buffer = QBuffer(buf)
    buffer.open(QIODevice.ReadOnly)
    pixmap.loadFromData(buffer.data())
    icon = QIcon(pixmap)
    return icon

# Example usage:
# base64_icon = 'iVBORw0KGgoAAAANSUhEUgAAA...'  # Base64 encoded png
# icon = base64_to_qicon(base64_icon)
# window.setWindowIcon(icon)
